#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

bool isOdd(int num) {
    return num % 2 == 1;
}

void generatePermutation(int N) {
    if (N == 1) {
        cout << 1 << endl;
        return;
    }

    if (N == 2 || N == 3) {
        cout << -1 << endl;
        return;
    }

    vector<int> permutation(N);

    for (int i = 0; i < N; i++) {
        permutation[i] = i + 1;
    }

    // Swap adjacent elements to ensure GCD of numbers at odd indices > GCD of numbers at even indices
    for (int i = 0; i < N - 1; i += 2) {
        swap(permutation[i], permutation[i + 1]);
    }

    // Print the lexicographically largest permutation
    for (int i = 0; i < N; i++) {
        cout << permutation[i] << " ";
    }
    cout << endl;
}

int main() {
    int T;
    cin >> T;

    while (T--) {
        int N;
        cin >> N;

        generatePermutation(N);
    }

    return 0;
}
